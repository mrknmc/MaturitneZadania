unit Unit1;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, ExtCtrls;

type
  TForm1 = class(TForm)
    Image1: TImage;
    Button1: TButton;
    procedure FormCreate(Sender: TObject);
    procedure Image1MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

procedure TForm1.FormCreate(Sender: TObject);
begin
image1.Canvas.MoveTo(101,0);
image1.canvas.LineTo(101,302);
image1.Canvas.MoveTo(202,0);
image1.canvas.LineTo(202,302);
image1.Canvas.MoveTo(0,101);
image1.canvas.LineTo(301,101);
image1.Canvas.MoveTo(0,202);
image1.canvas.LineTo(301,202);
end;


procedure drawX (x,y: integer);
begin
form1.image1.Canvas.MoveTo(x*10+10,y*10+10);
form1.image1.canvas.LineTo(x*10+80,y*10+80);
form1.image1.Canvas.MoveTo(x*10,y*10+80);
form1.image1.canvas.LineTo(x*10+80,y*10);
end;


procedure drawCircle (x,y: integer);
begin
form1.image1.canvas.ellipse(x*10,y*10,x*10+80,y*10+80);
end;


procedure TForm1.Image1MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
if Button = mbLeft then
  drawX(X div 100 +1,Y div 100 +1)
  else
  if Button = mbRight then
    drawCircle(X div 100,Y div 100);
end;

end.
